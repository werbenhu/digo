
//
// This file is generated by digen. Run 'digen' to regenerate.
//
// You can install this tool by running `go install github.com/werbenhu/di/digen`.
// For more details, please refer to https://github.com/werbenhu/di. 
//
package redis

import (
	"github.com/werbenhu/digo"
	t "github.com/werbenhu/digo/cmd/tools"
)

// init_redis registers the singleton object with ID redis into the DI object manager
// Now you can retrieve the singleton object by using `obj, err := di.Provide("redis")`.
// The obj obtained from the above code is of type `any`.
// You will need to forcefully cast the obj to its corresponding actual object type.
func init_redis() {
	name_obj, err := digo.Provide("name")
	if err != nil {
		panic(err)
	}
	name := name_obj.(string)
	tools_obj, err := digo.Provide("tools.tools")
	if err != nil {
		panic(err)
	}
	tools := tools_obj.(t.Tools)
	redis_obj := NewRedis(name, tools)
	digo.RegisterSingleton("redis", redis_obj)
}

// init registers all providers in the current package into the DI object manager.
func init() {
	init_redis()
}
